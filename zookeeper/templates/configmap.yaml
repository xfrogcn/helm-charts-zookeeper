apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ template "fullname" . }}-configmap
data:
  zoo.cfg: |-
    # The number of milliseconds of each tick
    tickTime={{.Values.config.tickTime}}
    # The number of ticks that the initial 
    # synchronization phase can take
    initLimit={{.Values.config.initLimit}}
    # The number of ticks that can pass between 
    # sending a request and getting an acknowledgement
    syncLimit={{.Values.config.syncLimit}}
    # the directory where the snapshot is stored.
    dataDir={{ .Values.config.dataDir }}
    # the port at which the clients will connect
    clientPort={{.Values.config.clientPort}}
    electionPort=3888
    serverPort=2888
    quorumListenOnAllIPs=true
{{- if .Values.config.maxClientCnxns }}
    # the maximum number of client connections.
    # increase this if you need to handle more clients
    maxClientCnxns={{ .Values.config.maxClientCnxns }}
{{- end }}
{{- if .Values.config.autopurge }}
{{- if .Values.config.autopurge.snapRetainCount }}
    # The number of snapshots to retain in dataDir
    autopurge.snapRetainCount={{ .Values.config.autopurge.snapRetainCount }}
{{- end}}
{{- if  or .Values.config.autopurge.purgeInterval (eq (.Values.config.autopurge.purgeInterval | quote) (0 | quote)) }}
    # Purge task interval in hours
    # Set to "0" to disable auto purge feature
    autopurge.purgeInterval={{ .Values.config.autopurge.purgeInterval }}
{{- end }}
{{ end }}
{{ if .Values.config.metricsProvider }}
    ## Metrics Providers
    #
    # https://prometheus.io Metrics Exporter
{{- with .Values.config.metricsProvider }}
{{- if .className }}
    metricsProvider.className={{ .className }}
{{- end }}
{{- if .httpPort }}
    metricsProvider.httpPort={{ .httpPort }}
{{- end }}
{{- if or .exportJvmInfo (eq (.exportJvmInfo | quote) (false | quote) ) }}
    metricsProvider.exportJvmInfo={{ .exportJvmInfo }}
{{- end }}
{{- end -}}

{{- end }}
{{- $values := . -}}
{{- $ns := .Release.Namespace -}}
{{- range untilStep 0 (int .Values.replicaCount) 1 }}
    server.{{ (add (int .) 1) }}={{ template "serviceName" $values }}-{{ (toString .) }}.{{ template "serviceName" $values }}.{{ $ns }}.svc.cluster.local:2888:3888
{{- end }}
  log4j.properties: |-
    # Copyright 2012 The Apache Software Foundation
    # 
    # Licensed to the Apache Software Foundation (ASF) under one
    # or more contributor license agreements.  See the NOTICE file
    # distributed with this work for additional information
    # regarding copyright ownership.  The ASF licenses this file
    # to you under the Apache License, Version 2.0 (the
    # "License"); you may not use this file except in compliance
    # with the License.  You may obtain a copy of the License at
    #
    #     http://www.apache.org/licenses/LICENSE-2.0
    #
    # Unless required by applicable law or agreed to in writing, software
    # distributed under the License is distributed on an "AS IS" BASIS,
    # WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    # See the License for the specific language governing permissions and
    # limitations under the License.

    # Define some default values that can be overridden by system properties
    zookeeper.root.logger=INFO, CONSOLE

    zookeeper.console.threshold=INFO

    zookeeper.log.dir=.
    zookeeper.log.file=zookeeper.log
    zookeeper.log.threshold=INFO
    zookeeper.log.maxfilesize=256MB
    zookeeper.log.maxbackupindex=20

    zookeeper.tracelog.dir=${zookeeper.log.dir}
    zookeeper.tracelog.file=zookeeper_trace.log

    log4j.rootLogger=${zookeeper.root.logger}

    #
    # console
    # Add "console" to rootlogger above if you want to use this 
    #
    log4j.appender.CONSOLE=org.apache.log4j.ConsoleAppender
    log4j.appender.CONSOLE.Threshold=${zookeeper.console.threshold}
    log4j.appender.CONSOLE.layout=org.apache.log4j.PatternLayout
    log4j.appender.CONSOLE.layout.ConversionPattern=%d{ISO8601} [myid:%X{myid}] - %-5p [%t:%C{1}@%L] - %m%n

    #
    # Add ROLLINGFILE to rootLogger to get log file output
    #
    log4j.appender.ROLLINGFILE=org.apache.log4j.RollingFileAppender
    log4j.appender.ROLLINGFILE.Threshold=${zookeeper.log.threshold}
    log4j.appender.ROLLINGFILE.File=${zookeeper.log.dir}/${zookeeper.log.file}
    log4j.appender.ROLLINGFILE.MaxFileSize=${zookeeper.log.maxfilesize}
    log4j.appender.ROLLINGFILE.MaxBackupIndex=${zookeeper.log.maxbackupindex}
    log4j.appender.ROLLINGFILE.layout=org.apache.log4j.PatternLayout
    log4j.appender.ROLLINGFILE.layout.ConversionPattern=%d{ISO8601} [myid:%X{myid}] - %-5p [%t:%C{1}@%L] - %m%n

    #
    # Add TRACEFILE to rootLogger to get log file output
    #    Log TRACE level and above messages to a log file
    #
    log4j.appender.TRACEFILE=org.apache.log4j.FileAppender
    log4j.appender.TRACEFILE.Threshold=TRACE
    log4j.appender.TRACEFILE.File=${zookeeper.tracelog.dir}/${zookeeper.tracelog.file}

    log4j.appender.TRACEFILE.layout=org.apache.log4j.PatternLayout
    ### Notice we are including log4j's NDC here (%x)
    log4j.appender.TRACEFILE.layout.ConversionPattern=%d{ISO8601} [myid:%X{myid}] - %-5p [%t:%C{1}@%L][%x] - %m%n
    #
    # zk audit logging
    #
    zookeeper.auditlog.file=zookeeper_audit.log
    zookeeper.auditlog.threshold=INFO
    audit.logger=INFO, RFAAUDIT
    log4j.logger.org.apache.zookeeper.audit.Log4jAuditLogger=${audit.logger}
    log4j.additivity.org.apache.zookeeper.audit.Log4jAuditLogger=false
    log4j.appender.RFAAUDIT=org.apache.log4j.RollingFileAppender
    log4j.appender.RFAAUDIT.File=${zookeeper.log.dir}/${zookeeper.auditlog.file}
    log4j.appender.RFAAUDIT.layout=org.apache.log4j.PatternLayout
    log4j.appender.RFAAUDIT.layout.ConversionPattern=%d{ISO8601} %p %c{2}: %m%n
    log4j.appender.RFAAUDIT.Threshold=${zookeeper.auditlog.threshold}

    # Max log file size of 10MB
    log4j.appender.RFAAUDIT.MaxFileSize=10MB
    log4j.appender.RFAAUDIT.MaxBackupIndex=10
  configuration.xsl: |-
    <?xml version="1.0"?>
    <xsl:stylesheet xmlns:xsl="http://www.w3.org/1999/XSL/Transform" version="1.0">
    <xsl:output method="html"/>
    <xsl:template match="configuration">
    <html>
    <body>
    <table border="1">
    <tr>
    <td>name</td>
    <td>value</td>
    <td>description</td>
    </tr>
    <xsl:for-each select="property">
    <tr>
    <td><a name="{name}"><xsl:value-of select="name"/></a></td>
    <td><xsl:value-of select="value"/></td>
    <td><xsl:value-of select="description"/></td>
    </tr>
    </xsl:for-each>
    </table>
    </body>
    </html>
    </xsl:template>
    </xsl:stylesheet>